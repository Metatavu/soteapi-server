/*
 * The Events Calendar REST API
 * The Events Calendar REST API allows accessing upcoming events information easily and conveniently.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package fi.metatavu.soteapi.wordpress.events.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Image
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-11T23:28:38.367+02:00")
public class Image {
  @JsonProperty("url")
  private String url = null;

  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("extension")
  private String extension = null;

  @JsonProperty("width")
  private Integer width = null;

  @JsonProperty("height")
  private Integer height = null;

  @JsonProperty("sizes")
  private ImageSize sizes = null;

  public Image url(String url) {
    this.url = url;
    return this;
  }

   /**
   * The URL to the full size version of the image
   * @return url
  **/
  @ApiModelProperty(value = "The URL to the full size version of the image")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public Image id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * The image WordPress post ID
   * @return id
  **/
  @ApiModelProperty(value = "The image WordPress post ID")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public Image extension(String extension) {
    this.extension = extension;
    return this;
  }

   /**
   * The image file extension
   * @return extension
  **/
  @ApiModelProperty(value = "The image file extension")
  public String getExtension() {
    return extension;
  }

  public void setExtension(String extension) {
    this.extension = extension;
  }

  public Image width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * The image natural width in pixels
   * @return width
  **/
  @ApiModelProperty(value = "The image natural width in pixels")
  public Integer getWidth() {
    return width;
  }

  public void setWidth(Integer width) {
    this.width = width;
  }

  public Image height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * The image natural height in pixels
   * @return height
  **/
  @ApiModelProperty(value = "The image natural height in pixels")
  public Integer getHeight() {
    return height;
  }

  public void setHeight(Integer height) {
    this.height = height;
  }

  public Image sizes(ImageSize sizes) {
    this.sizes = sizes;
    return this;
  }

   /**
   * The details about each size available for the image
   * @return sizes
  **/
  @ApiModelProperty(value = "The details about each size available for the image")
  public ImageSize getSizes() {
    return sizes;
  }

  public void setSizes(ImageSize sizes) {
    this.sizes = sizes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Image image = (Image) o;
    return Objects.equals(this.url, image.url) &&
        Objects.equals(this.id, image.id) &&
        Objects.equals(this.extension, image.extension) &&
        Objects.equals(this.width, image.width) &&
        Objects.equals(this.height, image.height) &&
        Objects.equals(this.sizes, image.sizes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(url, id, extension, width, height, sizes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Image {\n");
    
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    extension: ").append(toIndentedString(extension)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    sizes: ").append(toIndentedString(sizes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

