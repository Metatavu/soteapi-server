/*
 * The Events Calendar REST API
 * The Events Calendar REST API allows accessing upcoming events information easily and conveniently.
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package fi.metatavu.soteapi.wordpress.events.model;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;

import io.swagger.annotations.ApiModelProperty;

/**
 * CostDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-11-11T23:28:38.367+02:00")
public class CostDetails {
  @JsonProperty("currency_symbol")
  private String currencySymbol = null;

  /**
   * The position of the currency symbol in the cost string
   */
  public enum CurrencyPosition_Enum {
    PREFIX("prefix"),
    
    POSTFIX("postfix");

    private String value;

    CurrencyPosition_Enum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static CurrencyPosition_Enum fromValue(String text) {
      for (CurrencyPosition_Enum b : CurrencyPosition_Enum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("currency_position")
  private CurrencyPosition_Enum currencyPosition_ = null;

  @JsonProperty("values")
  private List<Integer> values = null;

  public CostDetails currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * The cost currency symbol
   * @return currencySymbol
  **/
  @ApiModelProperty(value = "The cost currency symbol")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CostDetails currencyPosition_(CurrencyPosition_Enum currencyPosition_) {
    this.currencyPosition_ = currencyPosition_;
    return this;
  }

   /**
   * The position of the currency symbol in the cost string
   * @return currencyPosition_
  **/
  @ApiModelProperty(value = "The position of the currency symbol in the cost string")
  public CurrencyPosition_Enum getCurrencyPosition_() {
    return currencyPosition_;
  }

  public void setCurrencyPosition_(CurrencyPosition_Enum currencyPosition_) {
    this.currencyPosition_ = currencyPosition_;
  }

  public CostDetails values(List<Integer> values) {
    this.values = values;
    return this;
  }

  public CostDetails addValuesItem(Integer valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<Integer>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * A sorted array of all the numeric values for the cost
   * @return values
  **/
  @ApiModelProperty(value = "A sorted array of all the numeric values for the cost")
  public List<Integer> getValues() {
    return values;
  }

  public void setValues(List<Integer> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CostDetails costDetails = (CostDetails) o;
    return Objects.equals(this.currencySymbol, costDetails.currencySymbol) &&
        Objects.equals(this.currencyPosition_, costDetails.currencyPosition_) &&
        Objects.equals(this.values, costDetails.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencySymbol, currencyPosition_, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CostDetails {\n");
    
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    currencyPosition_: ").append(toIndentedString(currencyPosition_)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

